name: Native release

on:
  push:
    tags:
      - 'v[0-9]+.*' # push events to matching releases

jobs:
  create-github-release:
    name: Create GitHub Release # creates the github release's url and version
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}    
    steps:
    - name: Create release # generates url
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Get release version from tag # gets version from github
      id: get_version
      run: echo ::set-output name=version::``${GITHUB_REF#refs/tags/}``

  build-gui-releases:
    name: Release GUI assets
    needs: create-github-release
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - { os: ubuntu-latest, cross: true,  toolchain: stable, target: x86_64-unknown-linux-musl }
          # Macos
          - { os: macos-latest, cross: false, toolchain: stable, target: x86_64-apple-darwin }
          - { os: macos-latest, cross: false, toolchain: stable, target: aarch64-apple-darwin }
          # Windows
          - { os: windows-latest, cross: false, toolchain: stable-x86_64-pc-windows-gnu, target: x86_64-pc-windows-gnu }
          - { os: windows-latest, cross: false, toolchain: stable-x86_64-pc-windows-msvc, target: x86_64-pc-windows-msvc }      
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.toolchain }}
          target: ${{ matrix.config.target }}
          override: true
          default: true

      - name: Toolchain update
      if: matrix.config.os != 'windows-latest' and matrix.config.os != 'macos-latest'
        run: |
          sudo apt-get install librust-atk-dev
          sudo apt-get install libgtk-3-dev
          sudo apt-get install libfontconfig-dev

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build library
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.config.cross }}
          command: build
          args: --release --target ${{ matrix.config.target }} -p rust_moc_gui

      - name: Create tar (Not Windows)
        if: matrix.config.os != 'windows-latest'     
        run: tar czfv mocgui-${{ needs.create-github-release.outputs.version }}-${{ matrix.config.target }}.tar.gz -C target/${{ matrix.config.target }}/release/ mocgui

      - name: Create ZIP (Windows)
        if: matrix.config.os == 'windows-latest'
        shell: pwsh
        run: |
          Get-Item *
          Get-Item ./target/*
          Get-Item ./target/${{ matrix.config.target }}/*
          Get-Item ./target/${{ matrix.config.target }}/release/*
          compress-archive ./target/${{ matrix.config.target }}/release/mocgui.exe mocgui-${{ needs.create-github-release.outputs.version }}-${{ matrix.config.target }}.zip

      - name: Upload compressed binary asset (Not Windows)
        if: matrix.config.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-github-release.outputs.upload_url }}
          asset_path: "mocgui-${{ needs.create-github-release.outputs.version }}-${{ matrix.config.target }}.tar.gz"
          asset_name: "mocgui-${{ needs.create-github-release.outputs.version }}-${{ matrix.config.target }}.tar.gz"
          asset_content_type: application/gzip

      - name: Upload compressed binary asset (Windows)
        if: matrix.config.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-github-release.outputs.upload_url }}
          asset_path: "mocgui-${{ needs.create-github-release.outputs.version }}-${{ matrix.config.target }}.zip"
          asset_name: "mocgui-${{ needs.create-github-release.outputs.version }}-${{ matrix.config.target }}.zip"
          asset_content_type: application/gzip